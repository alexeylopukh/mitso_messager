import 'package:encrypt/encrypt.dart' as encrypt;
import 'package:flutter/material.dart';

class EncryptInteractor {
  final encrypt.IV iv = encrypt.IV.fromLength(15);

  void test() {
    final String message = '''
    –ï—Å—Ç—å –º–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ Lorem Ipsum, 
    https://ru.lipsum.com/
    üëçüôàüòÇ
    –Ω–æ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∏–∑ –Ω–∏—Ö –∏–º–µ–µ—Ç –Ω–µ –≤—Å–µ–≥–¥–∞ –ø—Ä–∏–µ–º–ª–µ–º—ã–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, —é–º–æ—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –≤—Å—Ç–∞–≤–∫–∏ –∏–ª–∏ —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –¥–∞–∂–µ –æ—Ç–¥–∞–ª—ë–Ω–Ω–æ –Ω–µ –Ω–∞–ø–æ–º–∏–Ω–∞—é—Ç –ª–∞—Ç—ã–Ω—å. –ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–µ–Ω Lorem Ipsum –¥–ª—è —Å–µ—Ä—å—ë–∑–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞, –≤—ã –Ω–∞–≤–µ—Ä–Ω—è–∫–∞ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å —à—É—Ç–∫–∏, —Å–∫—Ä—ã—Ç–æ–π –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ –∞–±–∑–∞—Ü–∞. –¢–∞–∫–∂–µ –≤—Å–µ –¥—Ä—É–≥–∏–µ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã Lorem Ipsum –∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ–Ω–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–≤—Ç–æ—Ä—è—é—Ç, –ø–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –Ω—É–∂–Ω—ã–π –æ–±—ä—ë–º. –≠—Ç–æ –¥–µ–ª–∞–µ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–π –∑–¥–µ—Å—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º –Ω–∞—Å—Ç–æ—è—â–∏–º Lorem Ipsum –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º. –û–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–ª–æ–≤–∞—Ä—å –∏–∑ –±–æ–ª–µ–µ —á–µ–º 200 –ª–∞—Ç–∏–Ω—Å–∫–∏—Ö —Å–ª–æ–≤, –∞ —Ç–∞–∫–∂–µ –Ω–∞–±–æ—Ä –º–æ–¥–µ–ª–µ–π –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π. –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π Lorem Ipsum –≤—ã–≥–ª—è–¥–∏—Ç –ø—Ä–∞–≤–¥–æ–ø–æ–¥–æ–±–Ω–æ, –Ω–µ –∏–º–µ–µ—Ç –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –∞–±–∑–∞—Ü–µ–π –∏–ª–∏ "–Ω–µ–≤–æ–∑–º–æ–∂–Ω—ã—Ö" —Å–ª–æ–≤.
    ''';
    print('message: $message');
    String keyString = encrypt.Key.fromSecureRandom(32).base64;
    print('keyString: $keyString');
    final String encrypted =
        encryptMessage(message: message, encrypter: createEncrypter(keyString));
    final String decrypted =
        decryptMessage(message: encrypted, encrypter: createEncrypter(keyString));

    print('encrypted: $encrypted');
    print('decrypted: $decrypted');
  }

  encrypt.Encrypter createEncrypter(String keyString) {
    final encrypt.Key key = encrypt.Key.fromBase64(keyString);
    return encrypt.Encrypter(encrypt.AES(key));
  }

  String encryptMessage({@required message, @required encrypt.Encrypter encrypter}) {
    return encrypter.encrypt(message, iv: iv).base64;
  }

  String decryptMessage({@required message, @required encrypt.Encrypter encrypter}) {
    return encrypter.decrypt(encrypt.Encrypted.from64(message), iv: iv);
  }
}
